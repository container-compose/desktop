name: Build and Release Orchard

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Get version from tag
        id: version
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          else
            VERSION="dev-$(date +%Y%m%d-%H%M%S)"
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Version: $VERSION"

      - name: Update version in Info.plist
        run: |
          /usr/libexec/PlistBuddy -c "Set :CFBundleShortVersionString ${{ steps.version.outputs.version }}" Orchard/Info.plist || true
          /usr/libexec/PlistBuddy -c "Set :CFBundleVersion ${{ github.run_number }}" Orchard/Info.plist || true

      - name: Build app
        run: |
          xcodebuild -project Orchard.xcodeproj \
                     -scheme Orchard \
                     -configuration Release \
                     -derivedDataPath build/ \
                     -archivePath build/Orchard.xcarchive \
                     archive

      - name: Export app
        run: |
          cat > export_options.plist << EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
              <key>method</key>
              <string>mac-application</string>
              <key>destination</key>
              <string>export</string>
          </dict>
          </plist>
          EOF

          xcodebuild -exportArchive \
                     -archivePath build/Orchard.xcarchive \
                     -exportPath build/export \
                     -exportOptionsPlist export_options.plist

      - name: Create DMG
        run: |
          # Create a temporary directory for DMG contents
          mkdir -p dmg_contents
          cp -R build/export/Orchard.app dmg_contents/

          # Create Applications symlink
          ln -s /Applications dmg_contents/Applications

          # Create DMG
          hdiutil create -volname "Orchard ${{ steps.version.outputs.version }}" \
                         -srcfolder dmg_contents \
                         -ov -format UDZO \
                         "Orchard-${{ steps.version.outputs.version }}.dmg"

      - name: Notarize app (if certificates available)
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        env:
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
        run: |
          if [[ -n "$APPLE_ID" && -n "$APPLE_PASSWORD" && -n "$APPLE_TEAM_ID" ]]; then
            echo "Notarizing app..."
            xcrun notarytool submit "Orchard-${{ steps.version.outputs.version }}.dmg" \
                                    --apple-id "$APPLE_ID" \
                                    --password "$APPLE_PASSWORD" \
                                    --team-id "$APPLE_TEAM_ID" \
                                    --wait

            echo "Stapling notarization..."
            xcrun stapler staple "Orchard-${{ steps.version.outputs.version }}.dmg"
          else
            echo "Skipping notarization - no certificates configured"
          fi

      - name: Calculate checksums
        run: |
          shasum -a 256 "Orchard-${{ steps.version.outputs.version }}.dmg" > "Orchard-${{ steps.version.outputs.version }}.dmg.sha256"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: orchard-${{ steps.version.outputs.version }}
          path: |
            Orchard-${{ steps.version.outputs.version }}.dmg
            Orchard-${{ steps.version.outputs.version }}.dmg.sha256

      - name: Create Release
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            Orchard-${{ steps.version.outputs.version }}.dmg
            Orchard-${{ steps.version.outputs.version }}.dmg.sha256
          body: |
            ## Orchard v${{ steps.version.outputs.version }}

            ### Installation
            1. Download the DMG file below
            2. Open the DMG and drag Orchard.app to your Applications folder
            3. Launch Orchard from Applications

            ### Changes
            See the commit history for detailed changes in this release.

            ### Checksums
            - **SHA256**: See the `.sha256` file for verification

            ### System Requirements
            - macOS 12.0 or later
            - Apple Silicon or Intel Mac
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
